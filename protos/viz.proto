/*****************************************************************
*   Copyright 2021 Lockheed Martin Corporation.                  *
*   Use of this software is subject to the BSD 3-Clause License. *
*****************************************************************/

syntax = "proto3";

//
// Service to connect the Momentum 22 Python Visualization to student code
service Momentum22Viz {
  //
  // Client: Student code
  // Server: Visualization
  // Sets the landing status in the visualization based on observations in student code
  rpc SetLandingStatus(LandingNotification) returns (ReqAck) {}  
  //
  // Client: Student code
  // Server: Visualization
  // Sets the take off status in the visualization based on observations in student code
  rpc SetTakeoffStatus(TakeoffNotification) returns (ReqAck) {}  
  //
  // Client: Student Code
  // Server: Visualization
  // Sets the drone's position in the visualization based on observations in student code
  rpc SetDroneLocation(Location) returns (ReqAck) {}
}

//
// Location of the student drone in lat/lon linked to time
message Location {
  // ID of this message (this will returned in the ReqAck message)
  uint32 msgId = 1;
  // Drone latitute in degreees
  double latitude = 2;
  // Drone longitude in degreees
  double longitude = 3;
  // Time when this location was observed in milliseconds
  uint64 time = 4;
}

//
// Notification to the visualization utility that the drone has landed linked to time
message LandingNotification{
  // ID of this message (this will returned in the ReqAck message)
  uint32 msgId = 1;
  // Whether the drone is landed
  bool isLanded = 2;
  // Time when the landing was observed in milliseconds
  uint64 time = 3;
}

//
// Notification ot the visualization utility that the drone has taken off linked to time
message TakeoffNotification{
  // ID of this message (this will returned in the ReqAck message)
  uint32 msgId = 1;
  // Whether the drone is taken off
  bool isTakenOff = 2;
  // Time when the landing was observed in milliseconds
  uint64 time = 3;
}

//
// Request/Acknowledgement of messages
message ReqAck {
  // ID of the message this is an ackowledgement to or request for
  uint64 msgId = 1;
}
